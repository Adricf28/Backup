/* EL "*" SELECCIONA TODOS LOS ELEMENTOS */
/* * {
    color: red;
} */


body {
    /* VH SIGNIFICA VIEWPORT HEIGHT Y ADAPTA EL CONTENEDOR AL TAMAÑO DE LA VENTANA */
    height: 100vh; 
    /* VW ES LO MISMO PERO CON EL WIDTH */
    width: 100vw;  
    overflow-x: hidden; /* OVERFLOW HIDDEN OCULTA LAS BARRAS DE HACER SCROLL */
    font-size: 3em;
    font-family: 'Zen Loop', cursive;
    font-weight: 500;
}


/* JERARQUIA:
    -!IMPORTANT
    -ESTILOS EN LINEA (LOS QUE DEFINES EN HTML DENTRO DEL ELEMENTO DIRECTAMENTE)
    -ID
    -PSEUDO-CLASES(:hover,:focus etc) / CLASES / ATRIBUTOS (SE APLICA POR CASCADA)
    -ELEMENTOS
    -PSEUDO-ELEMENTOS 
*/


/* ELIGES LOS ATRIBUTOS CON SU NOMBRE Y VALOR ENTRE CORCHETES */
[armondiga="wenizima"] {
    color: yellowgreen;
}


/* OUTLINE */
/* ES COMO BORDER PERO NO OCUPA ESPACIO, SE SUPERPONE EN CASO DE COLISION */
/* LA SUPERPOSICION DEPENDE DEL Z INDEX */
.caja1 {
    outline: 15px solid rgb(64, 64, 195);
    height: 200px;
    width: 200px;
    background-color: rgb(221, 79, 79);
    margin: auto;
}

.caja2 {
    height: 200px;
    width: 200px;
    background-color: rgb(204, 204, 89);
    margin: auto;
}

.caja {
    height: 200px;
    width: 200px;
    background-color: rgb(157, 133, 212);
    display: inline-block;
}

.b {
    outline: 5px solid rebeccapurple;
}

.cajas {
    width: 120px;
    height: 120px;
    display: block;
}

.A {
    background-color: rgb(206, 83, 83);
}

.B {
    background-color: rgb(111, 204, 111);
    position: relative;
    /* TOP Y LEFT TIENEN PRIORIDAD FRENTE A BOTTOM Y RIGHT EN CASO DE CONTRADICCION */
    /* top: 10px; 
    bottom: 30px;
    left: 10px;
    right: 30px; */
    bottom: 20px;
}

.C {
    background-color: rgb(69, 69, 179);
}

.D {
    background-color: rgb(209, 209, 101);
}


/* LA UNICA FORMA DE QUE UN PADRE SE SUPERPONGA A SU HIJO ES QUE EL PADRE NO TENGA
    EL Z-INDEX DEFINIDO Y EL HIJO LO TENGA NEGATIVO */
.container {
    width: 300px;
    height: 300px;
    background-color: rgb(57, 57, 138);
    margin: 100px;
    position: relative;
}

.hijo {
    background-color: rgb(216, 175, 99);
    height: 120px;
    width: 120px;
    position: relative;
    top: -20px;
    left: -20px;
    z-index: -1;
}


/* CON POSITION ABSOLUTE LOS ELEMENTOS BLOCK NO OCUPAN TODA LA LINEA, SE AJUSTAN A SU CONTENIDO */
/* SI EL CONTENEDOR EN EL QUE ESTAN NO ESTA POSICIONADO,TOMAN TODO EL VIEWPORT COMO REFERENCIA
   PARA COLOCARLOS CON TOP/BOTTOM/LEFT/RIGHT */
.contenedor {
    margin: 50px auto;
    border: 4px solid rgb(241, 79, 79);
    height: 450px;
    width: 450px;
    background-color: rgb(103, 216, 103);
    position: relative;
}

.cajaa {
    height: 100px;
    width: 100px;
    background-color: rgb(255, 255, 92);
    position: absolute;
}

.aa {
}

.bb {
    right: 0;
}

.cc {
    bottom: 0;
}

.dd {
    bottom: 0;
    right: 0;
}

/* DEJANDO TODO A 0 Y CON MARGIN AUTO SE CENTRA */
.ee {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

/* POSITION FIXED ES COMO ABSOLUTE PERO SE MUEVE CON LA PAGINA AL HACER SCROLL */
/* POSITION STICKY ES COMO FIXED PERO NO DESDE EL PRINCIPIO, HAY QUE "RECOGERLO" */
.sticky {
    position: sticky;
    top: 0;
    background-color: aquamarine;
    margin-top: 0;
}


/* INLINE-BLOCK ES COMO INLINE PERO PUEDES ESPECIFICAR ES HEIGHT Y EL WIDTH */
.displays {
    height: 150px;
    width: 150px;
    margin: 20px;
    border: 10px solid rgb(204, 86, 86);
    background-color: rgb(204, 204, 107);
    display: inline-block;
}


/* OVERFLOW SIRVE PARA MANEJAR ELEMENTOS QUE SOBRESALEN DE SUS PADRES */
/* OVERFLOW AUTO DETECTA SI EL CONTENIDO ESTA SOBRESALIENDO POR Y O X, Y AÑADE LA BARRA DE SCROLL
   DONDE CORRESPONDA */
/* OVERFLOW SCROLL AÑADE AMBAS BARRAS DE SCROLL, SEAN NECESARIAS O NO */
.overflow {
    margin: auto;
    margin-top: 50px;
    width: 320px;
    height: 350px;
    border: 4px solid blue;
    background-color: grey;
    overflow: auto;
}


/* EL UNICO BUEN USO DE FLOAT: SI DENTRO DE UN DIV PONES UNA IMAGEN CON FLOAT DEFINIDO Y
   LUEGO PONES DIRECTAMENTE TEXTO, EL TEXTO ENVUELVE A LA IMAGEN DANDO UN BUEN ASPECTO */
.float {
    width: 50%;
    margin: auto;
    margin-top: 50px;
    border: 6px solid rgb(59, 59, 59);
    border-radius: 10px;
    background-color: rgb(179, 78, 78);
}

.float img {
    float: right;
    border-bottom-left-radius: 20%;
    border-top-right-radius: 5px;
    position: relative;
    left: 1px;
    bottom: 1px;
}


/* PSEUDO-ELEMENTOS */
/* ::first-letter Y ::first-line NO FUNCIONAN CON ELEMENTOS INLINE */
/* ::selection EDITA COMO SE VE CUANDO SELECCIONAMOS ALGO */

/* BEFORE Y AFTER AÑADEN CONTENIDO VISIBLE PERO NO EXISTENTE EN EL DOM, COMO OUTLINE */
.befafter::before {
    content: "Me comio";
}
.befafter::after {
    content: "plato de lentejas";
}


/* PSEUDO-CLASES */
/* :link DA ESTILO A LOS ENLACES SIN VISITAR */
/* :visited DA ESTILO A LOS ENLACES VISITADOS */
/* :active DA ESTILO MIENTRAS MANTEGA PRESIONADO EL CLICK DEL RATON */
/* :focus DA ESTILO MIENTRAS ESTE "ENFOCADO", COMO UN INPUT AL DAR CLICK */
.focus {
    margin: 20px;
    transition: all 1s;
}

.focus:focus {
    background-color: blanchedalmond;
}


.imagen {
    margin: 50px;
    width: 300px;
    height: 500px;
    background-color: rgb(31, 29, 29);
}

/* object-fit MANEJA LA MANERA EN LA QUE LAS IMAGENES SE AJUSTAN */
    /* contain NO MODIFICA LA IMAGEN Y LA CENTRA DEJANDO BORDES DONDE SEAN NECESARIOS */
    /* cover AJUSTA LA IMAGEN A SU CONTENEDOR HACIENDO UNA ESPECIE DE ZOOM, ADEMAS ES RESPONSIVE */
    /* none USA LAS PROPIEDADES POR DEFECTO */
    /* scale-down ELIGE LA QUE TENGA UNA RESOLUCION MENOR ENTRE none Y contain */
/* object-position DEFINE QUE PARTE SE VERA DE LA IMAGEN */
.imagen img {
    border: 2px solid black;
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: 20px;
}



.cursor {
    border: 4px solid red;
    width: 200px;
    height: 200px;
    margin-left: 70px;
    background-color: pink;
    cursor: grab;
    text-align: center;
    margin: auto;
}

.cursor:active {
    cursor: grabbing;
}